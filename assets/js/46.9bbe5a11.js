(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{496:function(t,e,r){"use strict";r.r(e);var n=r(2),a=Object(n.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"数据结构类问题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据结构类问题"}},[t._v("#")]),t._v(" 数据结构类问题")]),t._v(" "),e("p",[t._v("针对滑动窗口 + 数据结构类型，大致分为以下几种情况：")]),t._v(" "),e("ul",[e("li",[t._v("求范围，比如[x-t, x+t]，转化为"),e("code",[t._v("求[x,x+t]中的最小值")]),t._v("  和 "),e("code",[t._v("在[x-t, x]中求最大值")]),t._v("， 则用红黑树、AVL树、BST树、桶排序\n"),e("ul",[e("li",[t._v("注意，这种情况可以考虑桶排序，桶排序的效率更高")])])]),t._v(" "),e("li",[t._v("求中位数，可用两个堆，中位数左边较小一部分数据使用大顶堆，中位数右边较大一部分数据使用小顶堆")]),t._v(" "),e("li",[t._v("求极值，可用单调队列，若是两个极值，可以两个单调队列（一个存放极大值，一个存放极小值，数据两个都要入队）")])]),t._v(" "),e("p",[t._v("总结，降低时间复杂度的一个绝招就是增加空间复杂度：利用更好的数据结构。即此类型题目就是对滑动窗口内使用合适的数据结构，提升时间复杂度，从O(n * n) 提升到O(n * lgn) 或 O(n * 1)")]),t._v(" "),e("h2",{attrs:{id:"例题"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#例题"}},[t._v("#")]),t._v(" 例题")]),t._v(" "),e("p",[t._v("To be continued...")]),t._v(" "),e("h2",{attrs:{id:"小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[t._v("#")]),t._v(" 小结")]),t._v(" "),e("p",[t._v("这个类型，核心是考察对数据结构的掌握，对于滑动窗口使用合适的数据结构，利用增大空间来降低时间复杂度。")]),t._v(" "),e("h2",{attrs:{id:"附录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[t._v("#")]),t._v(" 附录")]),t._v(" "),e("h3",{attrs:{id:"数据结构类题目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据结构类题目"}},[t._v("#")]),t._v(" 数据结构类题目")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://leetcode.cn/problems/contains-duplicate-iii/",target:"_blank",rel:"noopener noreferrer"}},[t._v("220. 存在重复元素 III"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://leetcode.cn/problems/sliding-window-maximum/",target:"_blank",rel:"noopener noreferrer"}},[t._v("239. 滑动窗口最大值"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://leetcode.cn/problems/sliding-window-median/",target:"_blank",rel:"noopener noreferrer"}},[t._v("480. 滑动窗口中位数"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://leetcode.cn/problems/k-empty-slots/",target:"_blank",rel:"noopener noreferrer"}},[t._v("683. K 个关闭的灯泡"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://leetcode.cn/problems/longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit/",target:"_blank",rel:"noopener noreferrer"}},[t._v("1438. 绝对差不超过限制的最长连续子数组"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=a.exports}}]);