(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{526:function(t,e,a){"use strict";a.r(e);var s=a(2),n=Object(s.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#使用jsmpeg实现视频自动播放"}},[t._v("使用JSMpeg实现视频自动播放")]),e("ul",[e("li",[e("a",{attrs:{href:"#方案调研"}},[t._v("方案调研")]),e("ul",[e("li",[e("a",{attrs:{href:"#方案对比"}},[t._v("方案对比")])])])]),e("li",[e("a",{attrs:{href:"#jsmpeg"}},[t._v("JSMpeg")]),e("ul",[e("li",[e("a",{attrs:{href:"#vue端使用示例"}},[t._v("Vue端使用示例")])])])]),e("li",[e("a",{attrs:{href:"#附录"}},[t._v("附录")])])])])])]),e("p"),t._v(" "),e("h1",{attrs:{id:"使用jsmpeg实现视频自动播放"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用jsmpeg实现视频自动播放"}},[t._v("#")]),t._v(" 使用JSMpeg实现视频自动播放")]),t._v(" "),e("h2",{attrs:{id:"方案调研"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方案调研"}},[t._v("#")]),t._v(" 方案调研")]),t._v(" "),e("p",[t._v("需要实现动图效果，共有以下几种方案：")]),t._v(" "),e("ul",[e("li",[t._v("GIF图")]),t._v(" "),e("li",[t._v("视频Video标签")]),t._v(" "),e("li",[t._v("导出Webp和APNG")]),t._v(" "),e("li",[t._v("使用jsmpg")])]),t._v(" "),e("h3",{attrs:{id:"方案对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#方案对比"}},[t._v("#")]),t._v(" 方案对比")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"center"}},[t._v("方案")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("优点")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("缺点")]),t._v(" "),e("th",{staticStyle:{"text-align":"center"}},[t._v("结论")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("GIF图")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("全平台支持")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("尺寸大，效果差")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("一般的小图可以继续用GIF途")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("视频Video标签")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("尺寸小，效果好")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("移动浏览器不支持自动播放autoloop，即移动端浏览器做了限制。"),e("br"),t._v("移动端自动播放的前提是，静音播放或用户已经产生点击触摸滑动等主动行为的交互后调用play方法")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("不需要自动播放的场景，可以考虑直接使用Video标签")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("Webp")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("尺寸小，效果好")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Chrome支持，但是Safari从 iOS14开始支持，iOS16完全支持，即在iOS上兼容性差")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("一般情况下不考虑使用Webp")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("APNG")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("尺寸小，效果好")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("Chrome从59开始支持，Safari从iOS8上开始支持，")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("动图尺寸较大的情况，考虑使用APNG")]),t._v("，整体支持情况还可以，Chrome 59已经是比较低的版本了，且在低版本上APNG会显示首帧图。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"center"}},[t._v("jsmpg")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("同视频格式，可以实现自动播放，且规避了video标签的兼容问题（原生UI不一致等各种兼容问题）")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[t._v("需要将视频转成.ts文件，转换后ts文件会比MP4文件大一点")]),t._v(" "),e("td",{staticStyle:{"text-align":"center"}},[e("strong",[t._v("需要实现自动播放视频的场景，可以使用JSMpeg方案实现")])])])])]),t._v(" "),e("p",[t._v("小结：")]),t._v(" "),e("ol",[e("li",[e("strong",[t._v("需要视频自动播放的场景，一般可以使用jsmpeg方案实现")])]),t._v(" "),e("li",[t._v("需要动图的场景，如果GIF图较大，可以考虑使用APNG实现，APNG支持24位真彩色图片、支持8为Alpha透明通道、向下兼容PNG，且体积比Gif更小")])]),t._v(" "),e("p",[t._v("注意：")]),t._v(" "),e("ol",[e("li",[t._v("关于 Webp和APNG的支持情况，可以在"),e("a",{attrs:{href:"https://caniuse.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("caniuse"),e("OutboundLink")],1),t._v("网站查询")])]),t._v(" "),e("h2",{attrs:{id:"jsmpeg"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#jsmpeg"}},[t._v("#")]),t._v(" JSMpeg")]),t._v(" "),e("p",[t._v("JSMpeg是JS写的视频、音频解码器，能使用WebGL&Canvas2D渲染以及WebAudio声音输出。"),e("strong",[t._v("在需要实现自动播放视频的场景，可以使用JSMpeg方案实现")]),t._v("。")]),t._v(" "),e("p",[t._v("JSMpeg支持MPEG1 video & MP2 audio，需要将MP4文件转成.ts文件，具体转换工具官网中有提供。")]),t._v(" "),e("h3",{attrs:{id:"vue端使用示例"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vue端使用示例"}},[t._v("#")]),t._v(" Vue端使用示例")]),t._v(" "),e("div",{staticClass:"language-vue extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vue"}},[e("code",[t._v("// 1. 官网下载 min.js文件，引入工程，在index.html中加载脚本\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("text/javascript"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/js/jsmpeg.min.js"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token script"}}),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n// 具体Vue文件中使用\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("canvas")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("video"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("video"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("canvas")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\nonMounted(() => {\n  {\n    let canvas = document.getElementById('video')\n    let url = 'xxx.ts'\n\n    let player = new JSMpeg.Player(url, {\n      canvas: canvas,\n      // poster: \"xxx.png\",\n      audio: false,\n      // throttled: false, // 这里设置为false，不然不触发onSourceCompleted事件\n      // chunkSize: 1024 * 1024, // 使用分块加载数据时，一次加载的块大小。默认1024*1024(1mb)\n      progressive: false, // 是否分块加载数据，如果服务器不支持分片，需要设置该属性，否则默认打开分片会加载失败\n      loop: true, // 是否循环播放视频。默认true\n      autoplay: true,\n      // onPlay: () => {\n      //   console.log('play')\n      // },\n      // onPause: () => {\n      //   console.log('pause')\n      // },\n      // onEnded: () => {\n      //   console.log('end')\n      // },\n      // onStalled: () => {\n      //   console.log('没有足够的数据用于播放')\n      // },\n      // onSourceEstablished: () => {\n      //   console.log('第一次收到数据')\n      // }\n      onSourceCompleted: () => {\n        // 解决最开始播放时候出现一瞬间的白屏问题,即在 元素上设置一个图片，等视频下载完成后再隐藏图片开始播放\n        let shade = document.getElementById('video-shade')\n        shade.style.visibility = 'hidden';\t// 隐藏元素\n      }\n    })\n  }\n})\n\n\n")])])]),e("h2",{attrs:{id:"附录"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[t._v("#")]),t._v(" 附录")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("JSMpeg官网Github地址：https://github.com/phoboslab/jsmpeg")])]),t._v(" "),e("li",[e("p",[t._v("CANIUSE网站：https://caniuse.com/，用于查询浏览器各种支持情况")])])])])}),[],!1,null,null,null);e.default=n.exports}}]);