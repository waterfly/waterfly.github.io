(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{522:function(t,a,s){"use strict";s.r(a);var n=s(2),r=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#yaml"}},[t._v("YAML")]),a("ul",[a("li",[a("a",{attrs:{href:"#语法"}},[t._v("语法")])]),a("li",[a("a",{attrs:{href:"#数据类型"}},[t._v("数据类型")]),a("ul",[a("li",[a("a",{attrs:{href:"#基本数据结构"}},[t._v("基本数据结构")]),a("ul",[a("li",[a("a",{attrs:{href:"#对象"}},[t._v("对象")])]),a("li",[a("a",{attrs:{href:"#数组"}},[t._v("数组")])]),a("li",[a("a",{attrs:{href:"#纯量"}},[t._v("纯量")]),a("ul",[a("li",[a("a",{attrs:{href:"#字符串"}},[t._v("字符串")])])])])])]),a("li",[a("a",{attrs:{href:"#复合结构"}},[t._v("复合结构")])])])]),a("li",[a("a",{attrs:{href:"#其他"}},[t._v("其他")]),a("ul",[a("li",[a("a",{attrs:{href:"#引用"}},[t._v("引用")])]),a("li",[a("a",{attrs:{href:"#函数和正则表达式"}},[t._v("函数和正则表达式")])])])]),a("li",[a("a",{attrs:{href:"#参考资料"}},[t._v("参考资料")])])])])])]),a("p"),t._v(" "),a("h1",{attrs:{id:"yaml"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yaml"}},[t._v("#")]),t._v(" YAML")]),t._v(" "),a("p",[t._v("YAML，发音 /ˈjæməl/，用于配置文件描述配置，本身是 JSON 的超集，由于 JSON 语法过于严格，且缺乏注释，因此引入了 YAML 格式。YAML 支持注释、换行符分隔、多行字符串、裸字符串和更灵活的类型系统，也支持引用文件，以避免重复代码。")]),t._v(" "),a("p",[t._v('YAML 是"YAML Ain\'t a Markup Language"（YAML 不是一种'),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80",target:"_blank",rel:"noopener noreferrer"}},[t._v("标记语言"),a("OutboundLink")],1),t._v("）的"),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E9%81%9E%E8%BF%B4%E7%B8%AE%E5%AF%AB",target:"_blank",rel:"noopener noreferrer"}},[t._v("递回缩写"),a("OutboundLink")],1),t._v('。在开发的这种语言时，YAML 的意思其实是："Yet Another Markup Language"（仍是一种'),a("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E6%A0%87%E8%AE%B0%E8%AF%AD%E8%A8%80",target:"_blank",rel:"noopener noreferrer"}},[t._v("标记语言"),a("OutboundLink")],1),t._v("）["),a("a",{attrs:{href:"https://zh.wikipedia.org/zh-hans/YAML#cite_note-YAML_spec_2001_08_01-4",target:"_blank",rel:"noopener noreferrer"}},[t._v("4]"),a("OutboundLink")],1),t._v("，但为了强调这种语言以数据为中心，而不是以标记语言为重点，而用反向缩略语重新命名。")]),t._v(" "),a("p",[t._v("YAML 最大的优势就是支持注释，这一点在 JSON 中是不支持的，因此在配置文件中，YAML 更加灵活，更加易读。")]),t._v(" "),a("p",[t._v("当前最新的 YAML 语法版本为 1.2.2")]),t._v(" "),a("h2",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[t._v("#")]),t._v(" 语法")]),t._v(" "),a("p",[t._v("基本语法规则：")]),t._v(" "),a("ul",[a("li",[t._v("大小写敏感")]),t._v(" "),a("li",[t._v("使用缩进表示层级关系")]),t._v(" "),a("li",[t._v("缩进时不允许使用 TAB 键，只允许使用空格")]),t._v(" "),a("li",[t._v("缩进的空格数目不重要，只要相同层级的元素左侧对齐即可")])]),t._v(" "),a("p",[t._v("一些符号规则：")]),t._v(" "),a("ul",[a("li",[t._v("使用 # 表示注释，持续到行尾")]),t._v(" "),a("li",[t._v("使用三个连接线[---]表示文件开始，一个文件内支持多个 YAML 文件，使用该符号分割")]),t._v(" "),a("li",[t._v("使用三个英文句号[...]表示文件结束，非必须，串流时很有用")])]),t._v(" "),a("h2",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),a("h3",{attrs:{id:"基本数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据结构"}},[t._v("#")]),t._v(" 基本数据结构")]),t._v(" "),a("p",[t._v("基本数据结构大致分为三类：对象、数组、纯量，除此之外")]),t._v(" "),a("h4",{attrs:{id:"对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),a("p",[t._v("格式："),a("code",[t._v("animal: pets")]),t._v("，对应 JSON 数据结构为："),a("code",[t._v('{"animal": "pets"}')])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("// 基本格式\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("animal")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pets\n")])])]),a("h4",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),a("p",[t._v("格式：一个数组，必须 连线符 左侧相同")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[t._v("// YAML，数组，表示："),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Cat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Dog'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Goldfish'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Cat\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Dog\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Goldfish\n\n\n// YAML，嵌套数组，表示："),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Cat'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Dog'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Goldfish'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Cat\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Dog\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Goldfish\n")])])]),a("h4",{attrs:{id:"纯量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#纯量"}},[t._v("#")]),t._v(" 纯量")]),t._v(" "),a("p",[t._v("纯量最基本、不可再分的值，主要有以下类型，基本与 json 相同：")]),t._v(" "),a("ul",[a("li",[t._v("布尔值，true/false")]),t._v(" "),a("li",[t._v("整数，示例：12")]),t._v(" "),a("li",[t._v("浮点数，示例：12.30")]),t._v(" "),a("li",[t._v("Null，有三种表示方法（以下都表示{ parent: null }）：\n"),a("ul",[a("li",[t._v("使用波浪符号~表示，示例： "),a("code",[t._v("parent: ~")])]),t._v(" "),a("li",[t._v("直接用 null，示例： "),a("code",[t._v("parent: null")])]),t._v(" "),a("li",[t._v("空白也表示 null，示例： "),a("code",[t._v("parent:")])])])]),t._v(" "),a("li",[t._v("时间，采用 iso8601 格式，示例：iso8601: 2001-12-14t21:59:43.10-05:00")]),t._v(" "),a("li",[t._v("日期，采用 iso8601 格式的 年、月、日表示，示例：date: 1976-07-31")]),t._v(" "),a("li",[t._v("字符串，字符串规则较多，下面详细介绍下")])]),t._v(" "),a("h5",{attrs:{id:"字符串"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串"}},[t._v("#")]),t._v(" 字符串")]),t._v(" "),a("p",[t._v("字符串主要有以下规则")]),t._v(" "),a("ul",[a("li",[t._v("默认不需要用引号，示例："),a("code",[t._v("str: 这是一行字符串")])]),t._v(" "),a("li",[t._v("包含空格、特殊字符等，需要放在引号内，示例："),a("code",[t._v("str: '内容： 字符串'")])]),t._v(" "),a("li",[t._v("单引号、双引号效果一样")]),t._v(" "),a("li",[t._v("单引号中有单引号，需要使用两个单引号转义，示例："),a("code",[t._v("str: 'labor''s day'")])]),t._v(" "),a("li",[t._v("换行，可以写成多行，从第二行开始，必须有一个 单空格 缩进，换行符会被转成为 空格，即最终无换行符\n"),a("ul",[a("li",[t._v("使用 | 符号保留换行符，每行都会保留一个换行符")]),t._v(" "),a("li",[t._v("使用 > 符号折叠换行，即 只保留最后一个换行符")])])]),t._v(" "),a("li",[t._v("可插入 HTML 标记")])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 默认不需要用引号")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 这是一行字符串\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 包含空格、特殊字符等，需要放在引号内")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'内容： 字符串'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 单引号、双引号效果一样")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"这是一行字符串"')]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 单引号中有单引号，需要使用两个单引号转义")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 'labor''s day'\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示 { str: 'labor\\'s day' }")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 换行，可以多行写，从第二行开始，必须有个空格缩进，换行符被转换成 空格")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示：{ str: '这是一段 多行 字符串' }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 这是一段\n  多行\n  字符串\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用 | 符号保留换行符，每行都会保留一个换行符")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用 > 符号折叠换行，即 只保留最后一个换行符")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示：{ this: 'Foo\\nBar\\n', that: 'Foo Bar\\n' }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n  Foo\n  Bar")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("that")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v("\n  Foo\n  Bar")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 可插入HTML标记")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示：{ message: '\\n<p style=\"color: red\">\\n  段落\\n</p>\\n' }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[t._v('\n  <p style="color: red">\n    段落\n  </p>')]),t._v("\n\n\n")])])]),a("h3",{attrs:{id:"复合结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复合结构"}},[t._v("#")]),t._v(" 复合结构")]),t._v(" "),a("p",[t._v("对象、数组结合使用")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示：{ languages: [ 'Ruby', 'Perl' ], websites: { YAML: 'yaml.org' } }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("languages")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Ruby\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" Perl\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("websites")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("YAML")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" yaml.org\n")])])]),a("h2",{attrs:{id:"其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其他"}},[t._v("#")]),t._v(" 其他")]),t._v(" "),a("h3",{attrs:{id:"引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用"}},[t._v("#")]),t._v(" 引用")]),t._v(" "),a("p",[t._v("锚点"),a("code",[t._v("&")]),t._v("和别名"),a("code",[t._v("*")]),t._v("，可以用来引用。三个符号配合使用：")]),t._v(" "),a("ul",[a("li",[t._v("&，建立锚点")]),t._v(" "),a("li",[t._v("*，引用锚点")]),t._v(" "),a("li",[t._v("<<，表示合并到当前数据")])]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 建立锚点")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("defaults")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("&defaults")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("adapter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" postgres\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" localhost\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("development")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("database")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myapp_development\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用锚点数据，合并到当前数据结构中")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*defaults")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("database")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myapp_test\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用锚点数据，合并到当前数据结构中")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("<<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token important"}},[t._v("*defaults")]),t._v("\n")])])]),a("p",[t._v("表示以下 json 结构：")]),t._v(" "),a("div",{staticClass:"language-json extra-class"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"defaults"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"adapter"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"postgres"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"host"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"development"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"database"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myapp_development"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"adapter"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"postgres"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"host"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"test"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"database"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myapp_test"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"adapter"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"postgres"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[t._v('"host"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"localhost"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"函数和正则表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数和正则表达式"}},[t._v("#")]),t._v(" 函数和正则表达式")]),t._v(" "),a("p",[t._v("JS-YAML 特有，可以把函数和正则表达式转为字符串")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 表示 { fn: 'function () { return 1 }', reg: '/test/' }")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" function () "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" return 1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("reg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /test/\n")])])]),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[t._v("#")]),t._v(" 参考资料")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://yaml.org/",target:"_blank",rel:"noopener noreferrer"}},[t._v("YAML 官网"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2016/07/yaml.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("YAML 语言教程-"),a("OutboundLink")],1),a("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2016/07/yaml.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("阮一峰"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/nodeca/js-yaml",target:"_blank",rel:"noopener noreferrer"}},[t._v("js-yaml"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://nodeca.github.io/js-yaml/",target:"_blank",rel:"noopener noreferrer"}},[t._v("JS-YAML demo"),a("OutboundLink")],1),t._v("，YAML JavaScript parser，"),a("strong",[t._v("可以使用该网页参看所有语法规则，并且可以翻译 YAML 成对应 JSON 结构")]),t._v(",，很重要的一个网站")])])])}),[],!1,null,null,null);a.default=r.exports}}]);