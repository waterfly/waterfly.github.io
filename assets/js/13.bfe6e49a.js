(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{430:function(t,s,a){t.exports=a.p+"assets/img/arch.1d638c32.png"},431:function(t,s,a){t.exports=a.p+"assets/img/Commitizen.7e00a4f7.gif"},432:function(t,s,a){t.exports=a.p+"assets/img/cz-git.df1057c1.gif"},433:function(t,s,a){t.exports=a.p+"assets/img/changelog.b72efffc.png"},520:function(t,s,a){"use strict";a.r(s);var e=a(2),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#conventional-commits"}},[t._v("Conventional Commits")]),s("ul",[s("li",[s("a",{attrs:{href:"#背景"}},[t._v("背景")])]),s("li",[s("a",{attrs:{href:"#为什么使用约定式提交"}},[t._v("为什么使用约定式提交")])]),s("li",[s("a",{attrs:{href:"#整体认知"}},[t._v("整体认知")])]),s("li",[s("a",{attrs:{href:"#规范文档"}},[t._v("规范文档")])]),s("li",[s("a",{attrs:{href:"#规范配置文件"}},[t._v("规范配置文件")])]),s("li",[s("a",{attrs:{href:"#commitlint"}},[t._v("Commitlint")])]),s("li",[s("a",{attrs:{href:"#git-hooks"}},[t._v("Git hooks")]),s("ul",[s("li",[s("a",{attrs:{href:"#husky"}},[t._v("husky")])]),s("li",[s("a",{attrs:{href:"#simple-git-hooks"}},[t._v("simple-git-hooks")])]),s("li",[s("a",{attrs:{href:"#关于-commitlint-提交命令"}},[t._v("关于 commitlint 提交命令")])]),s("li",[s("a",{attrs:{href:"#vue3-工程中规范提交检查的实现"}},[t._v("vue3 工程中规范提交检查的实现")])])])]),s("li",[s("a",{attrs:{href:"#工程落地完整实践"}},[t._v("工程落地完整实践")])]),s("li",[s("a",{attrs:{href:"#交互提示工具"}},[t._v("交互提示工具")]),s("ul",[s("li",[s("a",{attrs:{href:"#commitizen"}},[t._v("Commitizen")])]),s("li",[s("a",{attrs:{href:"#cz-git-和-czg"}},[t._v("cz-git 和 czg")]),s("ul",[s("li",[s("a",{attrs:{href:"#cg-git"}},[t._v("cg-git")])]),s("li",[s("a",{attrs:{href:"#czg"}},[t._v("czg")])])])]),s("li",[s("a",{attrs:{href:"#基于czg的最佳工程实践"}},[t._v("基于czg的最佳工程实践")])])])]),s("li",[s("a",{attrs:{href:"#changelog"}},[t._v("CHANGELOG")])]),s("li",[s("a",{attrs:{href:"#附录"}},[t._v("附录")])])])])])]),s("p"),t._v(" "),s("h1",{attrs:{id:"conventional-commits"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#conventional-commits"}},[t._v("#")]),t._v(" Conventional Commits")]),t._v(" "),s("p",[t._v("约定式提交规范，一种用于给提交信息增加人机可读含义的规范。")]),t._v(" "),s("h2",{attrs:{id:"背景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),s("p",[t._v("一般工程提交信息写的过于随意没有一定的规则，这会导致两个问题：")]),t._v(" "),s("ul",[s("li",[t._v("追溯历史提交记录时不方便，无法准确定位某次提交的具体作用，比较费时间，尤其在多人协作项目中")]),t._v(" "),s("li",[t._v("无法自动生成 CHANGELOG")])]),t._v(" "),s("p",[t._v("因此有了"),s("strong",[t._v("Conventional Commits")]),t._v("（约定式提交规范），遵守该规范会使提交信息更可读，且方便自动生成 CHANGELOG，并可自动决定语义化的版本变更。")]),t._v(" "),s("p",[t._v("具体规范参考："),s("a",{attrs:{href:"https://www.conventionalcommits.org/zh-hans/v1.0.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Conventional Commits"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("这里引用官方规范文档中文案：")]),t._v(" "),s("blockquote",[s("h2",{attrs:{id:"为什么使用约定式提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用约定式提交"}},[t._v("#")]),t._v(" 为什么使用约定式提交")]),t._v(" "),s("ul",[s("li",[t._v("自动化生成 CHANGELOG。")]),t._v(" "),s("li",[t._v("基于提交的类型，自动决定语义化的版本变更。")]),t._v(" "),s("li",[t._v("向同事、公众与其他利益关系者传达变化的性质。")]),t._v(" "),s("li",[t._v("触发构建和部署流程。")]),t._v(" "),s("li",[t._v("让人们探索一个更加结构化的提交历史，以便降低对你的项目做出贡献的难度。")])])]),t._v(" "),s("h2",{attrs:{id:"整体认知"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#整体认知"}},[t._v("#")]),t._v(" 整体认知")]),t._v(" "),s("p",[t._v("为了工程中落地使用"),s("strong",[t._v("Conventional Commits")]),t._v("，牵涉到不同层面的库，东西比较多，一开始容易一头雾水，先看一个整体架构图，有个直观的印象：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(430),alt:""}})]),t._v(" "),s("p",[t._v("一层层解释下：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.conventionalcommits.org/zh-hans/v1.0.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Conventional Commits"),s("OutboundLink")],1),t._v("，规范文档，该文档为官方文档，定义了约定式提交规范的基本内容")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitlint"),s("OutboundLink")],1),t._v("，@commitlint/cli，lint 工具，使用该工具对提交信息进行 lint")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint/tree/master/%40commitlint/config-conventional",target:"_blank",rel:"noopener noreferrer"}},[t._v("@commitlint/config-conventional"),s("OutboundLink")],1),t._v("，规范配置文件，定义工程的约定式提交规范，commitlint 需要使用配置文件的定义对提交信息进行检查，规范配置文件有很多，一般使用该配置文件，可以基于该配置文件自定义")]),t._v(" "),s("li",[t._v("Git hook，使用 "),s("a",{attrs:{href:"https://github.com/typicode/husky",target:"_blank",rel:"noopener noreferrer"}},[t._v("husky"),s("OutboundLink")],1),t._v(" or "),s("a",{attrs:{href:"https://github.com/toplenboren/simple-git-hooks",target:"_blank",rel:"noopener noreferrer"}},[t._v("simple-git-hooks"),s("OutboundLink")],1),t._v("，Git 钩子工具，用于在提交时调用 commitlint 命令对提交进行 lint，simple-git-hooks 比较轻量，如果自定义东西比较多时考虑使用 husky")]),t._v(" "),s("li",[t._v("交互式提示工具，"),s("a",{attrs:{href:"https://github.com/commitizen-tools/commitizen",target:"_blank",rel:"noopener noreferrer"}},[t._v("Commitizen"),s("OutboundLink")],1),t._v(" or "),s("a",{attrs:{href:"https://cz-git.qbb.sh/zh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("cg-git"),s("OutboundLink")],1),t._v("，可以通过交互式命令生成遵守规范的提交")]),t._v(" "),s("li",[t._v("CHANAGELOG 工具，"),s("a",{attrs:{href:"https://github.com/conventional-changelog/conventional-changelog",target:"_blank",rel:"noopener noreferrer"}},[t._v("conventional-changelog-cli"),s("OutboundLink")],1),t._v(" or "),s("a",{attrs:{href:"https://github.com/googleapis/release-please",target:"_blank",rel:"noopener noreferrer"}},[t._v("release-please"),s("OutboundLink")],1),t._v("，在遵守约定式提交规范的基础上，自动根据 log 生成 CHANGELOG")])]),t._v(" "),s("p",[t._v("其中 commitlint、规范配置文件、git hook 三者是必须的，工程中配置这三个后，每次提交即会自动检查 commit message 是否符合规范")]),t._v(" "),s("h2",{attrs:{id:"规范文档"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#规范文档"}},[t._v("#")]),t._v(" 规范文档")]),t._v(" "),s("p",[t._v("约定式提交规范官方规范文档 "),s("a",{attrs:{href:"https://www.conventionalcommits.org/zh-hans/v1.0.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Conventional Commits"),s("OutboundLink")],1),t._v("，文档详细介绍了约定式提交规范的基本内容。")]),t._v(" "),s("p",[t._v("规范提交的基本格式为：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<type>[optional scope]: <description>\n\n[optional body]\n\n[optional footer(s)]\n\n\n// ---------------------\n// 译文\n<类型>[可选 范围]: <描述>\n\n[可选 正文]\n\n[可选 脚注]\n")])])]),s("p",[t._v("核心点：")]),t._v(" "),s("blockquote",[s("p",[t._v("提交说明包含了下面的结构化元素，以向类库使用者表明其意图：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("fix:")]),t._v(" "),s("em",[t._v("类型")]),t._v(" 为 "),s("code",[t._v("fix")]),t._v(" 的提交表示在代码库中修复了一个 bug（这和语义化版本中的 "),s("a",{attrs:{href:"https://semver.org/lang/zh-CN/#%E6%91%98%E8%A6%81",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("PATCH")]),s("OutboundLink")],1),t._v(" 相对应）。")]),t._v(" "),s("li",[s("strong",[t._v("feat:")]),t._v(" "),s("em",[t._v("类型")]),t._v(" 为 "),s("code",[t._v("feat")]),t._v(" 的提交表示在代码库中新增了一个功能（这和语义化版本中的 "),s("a",{attrs:{href:"https://semver.org/lang/zh-CN/#%E6%91%98%E8%A6%81",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("MINOR")]),s("OutboundLink")],1),t._v(" 相对应）。")]),t._v(" "),s("li",[s("strong",[t._v("BREAKING CHANGE:")]),t._v(" 在脚注中包含 "),s("code",[t._v("BREAKING CHANGE:")]),t._v(" 或 <类型>(范围) 后面有一个 "),s("code",[t._v("!")]),t._v(" 的提交，表示引入了破坏性 API 变更（这和语义化版本中的 "),s("a",{attrs:{href:"https://semver.org/lang/zh-CN/#%E6%91%98%E8%A6%81",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("MAJOR")]),s("OutboundLink")],1),t._v(" 相对应）。 破坏性变更可以是任意 "),s("em",[t._v("类型")]),t._v(" 提交的一部分。")]),t._v(" "),s("li",[t._v("除 "),s("code",[t._v("fix:")]),t._v(" 和 "),s("code",[t._v("feat:")]),t._v(" 之外，也可以使用其它提交 "),s("em",[t._v("类型")]),t._v(" ，例如 "),s("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint/tree/master/%40commitlint/config-conventional",target:"_blank",rel:"noopener noreferrer"}},[t._v("@commitlint/config-conventional"),s("OutboundLink")],1),t._v("（基于 "),s("a",{attrs:{href:"https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular 约定"),s("OutboundLink")],1),t._v("）中推荐的 "),s("code",[t._v("build:")]),t._v("、"),s("code",[t._v("chore:")]),t._v("、 "),s("code",[t._v("ci:")]),t._v("、"),s("code",[t._v("docs:")]),t._v("、"),s("code",[t._v("style:")]),t._v("、"),s("code",[t._v("refactor:")]),t._v("、"),s("code",[t._v("perf:")]),t._v("、"),s("code",[t._v("test:")]),t._v("，等等。")]),t._v(" "),s("li",[t._v("脚注中除了 "),s("code",[t._v("BREAKING CHANGE: <description>")]),t._v(" ，其它条目应该采用类似 "),s("a",{attrs:{href:"https://git-scm.com/docs/git-interpret-trailers",target:"_blank",rel:"noopener noreferrer"}},[t._v("git trailer format"),s("OutboundLink")],1),t._v(" 这样的惯例。")])]),t._v(" "),s("p",[t._v("其它提交类型在约定式提交规范中并没有强制限制，并且在语义化版本中没有隐式影响（除非它们包含 BREAKING CHANGE）。 可以为提交类型添加一个围在圆括号内的范围，以为其提供额外的上下文信息。例如 "),s("code",[t._v("feat(parser): adds ability to parse arrays.")]),t._v("。")])]),t._v(" "),s("p",[t._v("示例：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 普通功能提交\nfeat: complete a feature\n\n//包含 BREAKING CHANGE\nfeat: allow provided config object to extend other configs\n\nBREAKING CHANGE: `extends` key in config file is now used for extending other config files\n\n// 或者直接使用 ! 符号\nfeat!: send an email to the customer when a product is shipped\n\n// 包含范围的提交说明\nfeat(lang): add polish language\n\n// 包含多行正文和多行脚注的提交说明\nfix: prevent racing of requests\n\nIntroduce a request id and a reference to latest request. Dismiss\nincoming responses other than from latest request.\n\nRemove timeouts which were used to mitigate the racing issue but are\nobsolete now.\n\nReviewed-by: Z\nRefs: #123\n")])])]),s("p",[t._v("规范文档约定了轻量级的规范，具体落地到工程需要规范配置文件。")]),t._v(" "),s("p",[t._v("注：一般来说脚注用来放 BREAKING CHANGE、issue 关闭、作者、参考等")]),t._v(" "),s("h2",{attrs:{id:"规范配置文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#规范配置文件"}},[t._v("#")]),t._v(" 规范配置文件")]),t._v(" "),s("p",[t._v("一般工程常用的是"),s("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint/tree/master/%40commitlint/config-conventional",target:"_blank",rel:"noopener noreferrer"}},[t._v("@commitlint/config-conventional"),s("OutboundLink")],1),t._v("，该规范基于 "),s("a",{attrs:{href:"https://github.com/angular/angular/blob/22b96b9/CONTRIBUTING.md#-commit-message-guidelines",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular 约定"),s("OutboundLink")],1),t._v("，规定 type 为以下类型")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("feat")]),t._v(" 增加新功能")]),t._v(" "),s("li",[s("code",[t._v("fix")]),t._v(" 修复问题/BUG")]),t._v(" "),s("li",[s("code",[t._v("perf")]),t._v(" 优化/性能提升")]),t._v(" "),s("li",[s("code",[t._v("style")]),t._v(" 代码风格相关无影响运行结果的 (空格、格式化、逗号分号, 等等)")]),t._v(" "),s("li",[s("code",[t._v("refactor")]),t._v(" 代码重构（既不修复 bug，也不增加功能）")]),t._v(" "),s("li",[s("code",[t._v("docs")]),t._v(" 文档/注释")]),t._v(" "),s("li",[s("code",[t._v("test")]),t._v(" 测试相关")]),t._v(" "),s("li",[s("code",[t._v("revert")]),t._v(" 撤销修改")]),t._v(" "),s("li",[s("code",[t._v("chore")]),t._v(" 依赖更新/脚手架配置修改等（不改变 src 或测试文件，仅仅更新构建任务、包管理等）")]),t._v(" "),s("li",[s("code",[t._v("build")]),t._v(" 构造工具的或者外部依赖的改动，例如 webpack，npm")]),t._v(" "),s("li",[s("code",[t._v("ci")]),t._v(" 与 CI（持续集成服务）有关的改动")])]),t._v(" "),s("p",[t._v("详细配置见："),s("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint/blob/master/%40commitlint/config-conventional/index.js",target:"_blank",rel:"noopener noreferrer"}},[t._v("index.js"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("基本以上配置已经覆盖了绝大多数工程需求，如果需要加入自定义内容，可以基于该配置文件，添加自定义修改。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("//工程添加 @commitlint/config-conventional\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pnpm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-D")]),t._v(" @commitlint/config-conventional\n")])])]),s("h2",{attrs:{id:"commitlint"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commitlint"}},[t._v("#")]),t._v(" Commitlint")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitlint"),s("OutboundLink")],1),t._v("是核心，使用该 lint 工具基于规范配置文件对提交信息进行 lint 检查。官方文档写了很多东西，其实核心是使用 commitlint 进行 lint 检查，使用是很简单的，前期可以抛开文档中其他部分，先用起来，后面可以慢看看文档，文档基本覆盖了约定式提交规范的全部内容，工具链也比较多。")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("// 添加 @commitlint/cli\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pnpm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-D")]),t._v(" @commitlint/cli\n\n// 指定配置文件 package.json 中增加以下内容，这会直接使用 @commitlint/config-conventional 配置，当需要自定义时，可建文件\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitlint"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"extends"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"@commitlint/config-conventional"')]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("配置文件可以是以下文件：")]),t._v(" "),s("ul",[s("li",[s("code",[t._v(".commitlintrc")])]),t._v(" "),s("li",[s("code",[t._v(".commitlintrc.json")])]),t._v(" "),s("li",[s("code",[t._v(".commitlintrc.yaml")])]),t._v(" "),s("li",[s("code",[t._v(".commitlintrc.yml")])]),t._v(" "),s("li",[s("code",[t._v(".commitlintrc.js")])]),t._v(" "),s("li",[s("code",[t._v(".commitlintrc.cjs")])]),t._v(" "),s("li",[s("code",[t._v(".commitlintrc.ts")])]),t._v(" "),s("li",[s("code",[t._v(".commitlintrc.cts")])]),t._v(" "),s("li",[s("code",[t._v("commitlint.config.js")])]),t._v(" "),s("li",[s("code",[t._v("commitlint.config.cjs")])]),t._v(" "),s("li",[s("code",[t._v("commitlint.config.ts")])]),t._v(" "),s("li",[s("code",[t._v("commitlint.config.cts")])]),t._v(" "),s("li",[s("code",[t._v("commitlint")]),t._v(" field in "),s("code",[t._v("package.json")])])]),t._v(" "),s("p",[t._v("简单使用"),s("code",[t._v("@commitlint/config-conventional")]),t._v("时，直接在 package.json 中配置即可，如果需要复杂自定义，可在工程中建一个对应的配置文件进行自定义，自定义规则参考："),s("a",{attrs:{href:"https://commitlint.js.org/#/reference-configuration",target:"_blank",rel:"noopener noreferrer"}},[t._v("Configuration"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://commitlint.js.org/#/reference-rules",target:"_blank",rel:"noopener noreferrer"}},[t._v("Rules"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("下一步，需要在执行 git commit 命令时自动执行 lint 检查")]),t._v(" "),s("h2",{attrs:{id:"git-hooks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-hooks"}},[t._v("#")]),t._v(" Git hooks")]),t._v(" "),s("p",[t._v("commitlint 的执行期望是在提交的时候，即执行 git commit 命令时候执行检查，这时候需要 git hook。")]),t._v(" "),s("p",[t._v("目前常用的 Git hooks 工具有 "),s("a",{attrs:{href:"https://github.com/typicode/husky",target:"_blank",rel:"noopener noreferrer"}},[t._v("husky"),s("OutboundLink")],1),t._v(" 和 "),s("a",{attrs:{href:"https://github.com/toplenboren/simple-git-hooks",target:"_blank",rel:"noopener noreferrer"}},[t._v("simple-git-hooks"),s("OutboundLink")],1),t._v("，"),s("code",[t._v("simple-git-hooks")]),t._v("更轻量上手更简单，"),s("code",[t._v("husky")]),t._v("配置更多。即无特殊自定义配置，直接用"),s("code",[t._v("simple-git-hooks")]),t._v("，自定义配置较多的情况下使用"),s("code",[t._v("husky")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"husky"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#husky"}},[t._v("#")]),t._v(" husky")]),t._v(" "),s("p",[t._v("husky的集成也比较简单，husky会在工程root目录下创建"),s("code",[t._v(".husky")]),t._v("目录，里面会存放对应钩子文件执行对应命令")]),t._v(" "),s("p",[t._v("资料：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/typicode/husky",target:"_blank",rel:"noopener noreferrer"}},[t._v("huksy-Github"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://typicode.github.io/husky/",target:"_blank",rel:"noopener noreferrer"}},[t._v("husky-doc"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("集成方法：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// 1. 自动安装husky\npnpm dlx husky-init && pnpm install\n\n// 2. 给husky增加hook命令，例如增加commitlint\npnpx husky add .husky/commit-msg \'npx --no -- commitlint --edit "$1"\'\n\n\n// 执行完第一条命令，工程会自动安装husky，并创建 .husky 文件，并在package.json里增加prepage脚本命令\n{\n  "scripts": {\n    "prepare": "husky install"\n  },\n}\n\n\n\n// 工程目录如下，husky会在工程root目录下创建 .husky 文件，相关钩子命令会在里面对应的文件里，如 commit-msg 文件\n.\n├── .git\n│   └── sourcetreeconfig\n├── .gitignore\n├── .husky\n│   ├── _\n│   ├── commit-msg\t\t# 对应钩子文件，里面写入对应需要执行的钩子命令\n│   └── pre-commit\t\t# 对应钩子文件\n\n// commit-msg文件内容\n#!/usr/bin/env sh\n. "$(dirname -- "$0")/_/husky.sh"\n\nnpx --no -- commitlint --edit "$1"\n\n\n')])])]),s("h3",{attrs:{id:"simple-git-hooks"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#simple-git-hooks"}},[t._v("#")]),t._v(" simple-git-hooks")]),t._v(" "),s("p",[t._v("commilint 官方文旦使用的 husky，我们这里使用 simple-git-hooks 来配置 commitlint")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("// "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(".add simple-git-hooks\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("pnpm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-D")]),t._v(" simple-git-hooks\n\n// "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(". package.json添加以下内容\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"simple-git-hooks"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit-msg"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pnpm commitlint"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n// "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(". package.json中配置 postinstall 钩子，该钩子每次执行安装后使 simple-git-hooks 生效（其实simple-git-hooks命令执行一次即可）\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  \t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"postinstall"')]),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pnpm simple-git-hooks"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n// 注，simple-git-hooks官方的命令如下，如果是从husky迁移的需要注意：\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# [Optional] These 2 steps can be skipped for non-husky users")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config core.hooksPath .git/hooks/\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("rm")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-rf")]),t._v(" .git/hooks\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Update ./git/hooks")]),t._v("\nnpx simple-git-hooks\n\n")])])]),s("p",[t._v("工程添加该配置后，执行 pnpm i，然后尝试修改提交，commilint 就会按照 @commitlint/config-conventional 的配置进行规范提交检查了。")]),t._v(" "),s("h3",{attrs:{id:"关于-commitlint-提交命令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于-commitlint-提交命令"}},[t._v("#")]),t._v(" 关于 commitlint 提交命令")]),t._v(" "),s("ul",[s("li",[t._v("官方文档集成 husky 时的命令是："),s("code",[t._v("commitlint --edit ${1}")])]),t._v(" "),s("li",[t._v("集成 simple-git-hooks 的命令是："),s("code",[t._v("commitlint")])])]),t._v(" "),s("p",[t._v("对这个命令很费解，到底需要不需要 --edit 参数？")]),t._v(" "),s("p",[t._v("commlint 对--edit 参数的解释是：")]),t._v(" "),s("blockquote",[s("p",[t._v("-e, --edit read last commit message from the specified file or fallbacks to ./.git/COMMIT_EDITMSG [string]")])]),t._v(" "),s("p",[t._v("看完仍是很困惑，最终找到了"),s("a",{attrs:{href:"https://note.xiexuefeng.cc/post/husky-and-git-hooks/#%E5%9C%A8-commit-msg-%E9%92%A9%E5%AD%90%E4%B8%AD%E8%8E%B7%E5%8F%96%E4%BF%AE%E6%94%B9-commit-%E6%B6%88%E6%81%AF",target:"_blank",rel:"noopener noreferrer"}},[t._v("一篇文章"),s("OutboundLink")],1),t._v("解释：")]),t._v(" "),s("blockquote",[s("p",[t._v("执行"),s("code",[t._v("commit")]),t._v("命令后，"),s("code",[t._v("git")]),t._v("会将"),s("code",[t._v("commit")]),t._v("消息存放于一个临时文件中；然后触发"),s("code",[t._v("pre-commit")]),t._v("钩子，"),s("code",[t._v("pre-commit")]),t._v("钩子成功之后就会触发"),s("code",[t._v("commit-msg")]),t._v("，"),s("code",[t._v("commit-msg")]),t._v("钩子成功后则会将临时文件中的文本作为此次"),s("code",[t._v("commit")]),t._v("消息进行存储；")]),t._v(" "),s("p",[t._v("并且"),s("code",[t._v("commit-msg")]),t._v("钩子会对脚本传一个参数，这个参数就是存放"),s("code",[t._v("commit")]),t._v("消息的临时文件的路径；所以得到这个参数，就可以读取该文件的内容，也就能得到当前"),s("code",[t._v("commit")]),t._v("消息了；同理，在"),s("code",[t._v("commit-msg")]),t._v("钩子中覆盖这个文件就能对此次"),s("code",[t._v("commit")]),t._v("消息进行修改了；")]),t._v(" "),s("blockquote",[s("p",[t._v("It takes a single parameter, the name of the file that holds the proposed commit log message.["),s("a",{attrs:{href:"https://note.xiexuefeng.cc/post/husky-and-git-hooks/#fn1",target:"_blank",rel:"noopener noreferrer"}},[t._v("1]"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("不过，由于在"),s("code",[t._v("husky")]),t._v("中的指定的"),s("code",[t._v("commit-msg")]),t._v("钩子命令并不是 git 直接执行的，因此只能通过"),s("code",[t._v("husky")]),t._v("间接暴露的变量"),s("code",[t._v("$HUSKY_GIT_PARAMS")]),t._v("来获取临时文件的地址，如：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# $HUSKY_GIT_PARAMS变量就是commit-msg钩子传递的文件路径参数\nnode ./hooks/commit-msg $HUSKY_GIT_PARAMS\n")])])]),s("blockquote",[s("p",[t._v("Git hooks can get parameters via command-line arguments and stdin. Husky makes them accessible via HUSKY_GIT_PARAMS and HUSKY_GIT_STDIN environment variables.["),s("a",{attrs:{href:"https://note.xiexuefeng.cc/post/husky-and-git-hooks/#fn2",target:"_blank",rel:"noopener noreferrer"}},[t._v("2]"),s("OutboundLink")],1)])])]),t._v(" "),s("p",[t._v("其中$1 就是"),s("a",{attrs:{href:"https://typicode.github.io/husky/#migrate-from-v4-to-v8",target:"_blank",rel:"noopener noreferrer"}},[t._v("HUSKY_GIT_PARAMS"),s("OutboundLink")],1),t._v("，就是 commit-msg 钩子传递的文件路径参数")]),t._v(" "),s("blockquote",[s("ul",[s("li",[s("code",[t._v("HUSKY_GIT_PARAMS")]),t._v(" is removed. Instead Git parameters should be used directly in scripts (e.g. "),s("code",[t._v("$1")]),t._v(").")])])]),t._v(" "),s("p",[t._v("综合起来看，$1 就是 husky 暴露的 commit-msg 钩子传递的文件路径参数。即 `commitlint --edit ${1}``，就是对从$1 获取到的提交信息进行 lint。")]),t._v(" "),s("p",[t._v("但是 simple-git-hooks 似乎不需要--edit 参数，具体也查到资料，可能是因为 simple-git-hooks 与 husky 实现原理不一样。")]),t._v(" "),s("h3",{attrs:{id:"vue3-工程中规范提交检查的实现"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue3-工程中规范提交检查的实现"}},[t._v("#")]),t._v(" vue3 工程中规范提交检查的实现")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/vuejs/core",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vuejs"),s("OutboundLink")],1),t._v(" 工程中 git hooks 工具使用的 simple-git-hooks")]),t._v(" "),s("li",[t._v("规范见"),s("a",{attrs:{href:"https://github.com/vuejs/core/blob/main/.github/commit-convention.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git Commit Message Convention"),s("OutboundLink")],1),t._v("（This is adapted from "),s("a",{attrs:{href:"https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular's commit convention"),s("OutboundLink")],1),t._v(".）")]),t._v(" "),s("li",[t._v("lint 工具没有采用 commitlint 而是自己写了正则校验")])]),t._v(" "),s("p",[t._v("推测 Vue 工程因为都是高手，而且 lint 的核心就是正则校验，所以自己写了一个脚本保持代码轻量。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// package.json\n  \"simple-git-hooks\": {\n    \"pre-commit\": \"pnpm lint-staged && pnpm check\",\n    \"commit-msg\": \"node scripts/verifyCommit.js\"\n  },\n\n// verifyCommit.js 文件通过正则对type进行了校验\n\n// @ts-check\nimport chalk from 'chalk'\nimport { readFileSync } from 'fs'\nimport path from 'path'\n\nconst msgPath = path.resolve('.git/COMMIT_EDITMSG')\nconst msg = readFileSync(msgPath, 'utf-8').trim()\n\nconst commitRE =\n  /^(revert: )?(feat|fix|docs|dx|style|refactor|perf|test|workflow|build|ci|chore|types|wip|release)(\\(.+\\))?: .{1,50}/\n\nif (!commitRE.test(msg)) {\n  console.log()\n  console.error(\n    `  ${chalk.bgRed.white(' ERROR ')} ${chalk.red(\n      `invalid commit message format.`\n    )}\\n\\n` +\n      chalk.red(\n        `  Proper commit message format is required for automated changelog generation. Examples:\\n\\n`\n      ) +\n      `    ${chalk.green(`feat(compiler): add 'comments' option`)}\\n` +\n      `    ${chalk.green(\n        `fix(v-model): handle events on blur (close #28)`\n      )}\\n\\n` +\n      chalk.red(`  See .github/commit-convention.md for more details.\\n`)\n  )\n  process.exit(1)\n}\n")])])]),s("h2",{attrs:{id:"工程落地完整实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工程落地完整实践"}},[t._v("#")]),t._v(" 工程落地完整实践")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// 1. 添加三个库\npnpm add -D @commitlint/config-conventional\npnpm add -D @commitlint/cli\npnpm add -D simple-git-hooks\n\n// 2. 配置 package.json文件\n{\n "scripts": {\n  \t"postinstall": "pnpm simple-git-hooks"\n  },\n  "simple-git-hooks": {\n  \t"commit-msg": "pnpm commitlint"\n  },\n  "commitlint": {\n    "extends": [\n      "@commitlint/config-conventional"\n    ]\n  }\n}\n\n// 3 当没有在package.js 中没有配置commitlint，则 工程中添加 .commitlintrc.js 文件，添加以下内容（推荐使用这种方式，避免package.js臃肿，且工程结构清晰）\nmodule.exports = {\n  extends: [\'@commitlint/config-conventional\']\n}\n')])])]),s("p",[t._v("经过以上配置，工程在执行代码提交时，即可实现自动检查。")]),t._v(" "),s("h2",{attrs:{id:"交互提示工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#交互提示工具"}},[t._v("#")]),t._v(" 交互提示工具")]),t._v(" "),s("h3",{attrs:{id:"commitizen"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commitizen"}},[t._v("#")]),t._v(" Commitizen")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/commitizen/cz-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("Commitizen"),s("OutboundLink")],1),t._v("是一个交互性帮助规范 commit message 的工具，按照工具提示一步步即可生成符合指定规范的提交信息。")]),t._v(" "),s("p",[s("strong",[t._v("注：commitizen 只是一个交互式生成提交信息的工具，本身并不对提交信息进行 lint")]),t._v("。")]),t._v(" "),s("p",[s("img",{attrs:{src:a(431),alt:""}})]),t._v(" "),s("p",[t._v("即交互式的、选项式的一步步生成提交信息，节省了重复输入的时间。")]),t._v(" "),s("p",[t._v("详细安装可以参考"),s("a",{attrs:{href:"https://github.com/commitizen/cz-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("Commitizen"),s("OutboundLink")],1),t._v("说明，这里简单介绍下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//1. 全局安装 commitizen，如果将cz 或 git cz命令加入提交前命令，就需要本地安装，但是一般建议对commitlint加入提交前检查，而commitiizen个人全局安装\nnpm install -g commitizen\n\n//2. 使工程Commitizen friendly，注这一步使用的是cz-conventional-changelog规范\n# npm\ncommitizen init cz-conventional-changelog--save-dev --save-exact\n# yarn\ncommitizen init cz-conventional-changelog --yarn --dev --exact\n# pnpm\ncommitizen init cz-conventional-changelog --pnpm --save-dev --save-exact\n\n// 配置完后工程package.json会多出\n"config": {\n  "commitizen": {\n    "path": "cz-conventional-changelog"\n  }\n}\n\n// 然后使用 cz 、 git cz 、git-cz 代替 git commit 命令进行提交，即可出现交互式提示\ncz\ngit cz\ngit-cz\n')])])]),s("p",[t._v("上面示例中，使用的是 cz-conventional-changelog 规范，采用的是 Angular 规范，详见"),s("a",{attrs:{href:"https://github.com/commitizen/conventional-commit-types",target:"_blank",rel:"noopener noreferrer"}},[t._v("conventional-commit-types"),s("OutboundLink")],1),t._v("。")]),t._v(" "),s("p",[t._v("在 commitizen 中，cz-conventional-changelog 是一个适配器的概念，如果需要自定义规范，需要采用其他适配器，比如："),s("a",{attrs:{href:"https://github.com/leoforfree/cz-customizable",target:"_blank",rel:"noopener noreferrer"}},[t._v("cz-customizable"),s("OutboundLink")],1),t._v("，具体配置可参考其说明，增加自定义的规范配置。")]),t._v(" "),s("p",[t._v("整体上来说 commitizen 简化了提交步骤，帮助我们生成规范提交信息，但是还是不太好用，而且选项式的交互要一个个选，不支持联想，自定义配置上也比较繁琐。不推荐使用，下面重点介绍下"),s("a",{attrs:{href:"https://cz-git.qbb.sh/zh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("cz-git"),s("OutboundLink")],1),t._v("，")]),t._v(" "),s("h3",{attrs:{id:"cz-git-和-czg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cz-git-和-czg"}},[t._v("#")]),t._v(" cz-git 和 czg")]),t._v(" "),s("h4",{attrs:{id:"cg-git"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#cg-git"}},[t._v("#")]),t._v(" cg-git")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://cz-git.qbb.sh/zh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("cg-git"),s("OutboundLink")],1),t._v("一款轻量级，交互友好，"),s("strong",[t._v("高度自定义，支持联想")]),t._v("，遵循标准 Angular commit 规范的 Commitizen Adapter。")]),t._v(" "),s("p",[t._v("注意：")]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("cg-git 是 Commitizen 的适配器，其本身依赖 Commitizen")])]),t._v(" "),s("li",[t._v("cg-git 的优势是支持联想、规范配置简单灵活")])]),t._v(" "),s("p",[s("img",{attrs:{src:a(432),alt:""}})]),t._v(" "),s("p",[t._v("可以先读下作者的这两篇文章：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://cz-git.qbb.sh/zh/guide/why",target:"_blank",rel:"noopener noreferrer"}},[t._v("为什么选择 cz-git"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.qbb.sh/posts/2022-12-26-cz-git-czg-journey-zh",target:"_blank",rel:"noopener noreferrer"}},[t._v("cz-git 和 czg 的开发之旅"),s("OutboundLink")],1)])]),t._v(" "),s("p",[t._v("具体配置方式见："),s("a",{attrs:{href:"https://cz-git.qbb.sh/zh/guide/",target:"_blank",rel:"noopener noreferrer"}},[t._v("快速开始"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// 1. 全局或项目添加 commitizen\nnpm install -g commitizen\nor\nnpm install -D commitizen\n\n// 2. 安装 cz-git\nnpm install -D cz-git\n\n// 3. 修改 package.json 添加 config 指定使用的适配器\n{\n  "scripts": {\n\n  },\n  "config": {\n    "commitizen": {\n      "path": "node_modules/cz-git"\n    }\n  }\n}\n\n// 4. 规范配置（下面介绍）\n')])])]),s("p",[t._v("可以使用 cg-git 自带的"),s("a",{attrs:{href:"https://cz-git.qbb.sh/zh/config/#javascript-%E6%A8%A1%E6%9D%BF",target:"_blank",rel:"noopener noreferrer"}},[t._v("默认配置"),s("OutboundLink")],1),t._v("，也可以与 commitlint 结合使用，建立 commlint 支持的配置文件（例如**.commitlintrc.js**），在文件内直接自定义，文件配置在"),s("a",{attrs:{href:"https://cz-git.qbb.sh/zh/config/",target:"_blank",rel:"noopener noreferrer"}},[t._v("配置模板"),s("OutboundLink")],1),t._v("中介绍的比较清楚。即")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("cg-git 自带了"),s("a",{attrs:{href:"https://cz-git.qbb.sh/zh/config/#javascript-%E6%A8%A1%E6%9D%BF",target:"_blank",rel:"noopener noreferrer"}},[t._v("默认配置"),s("OutboundLink")],1),t._v("（在 Javascript 模板中），另外还有："),s("a",{attrs:{href:"https://cz-git.qbb.sh/zh/config/#%E4%B8%AD%E8%8B%B1%E6%96%87%E5%AF%B9%E7%85%A7%E6%A8%A1%E6%9D%BF",target:"_blank",rel:"noopener noreferrer"}},[t._v("中英文对照模板"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://cz-git.qbb.sh/zh/config/#%E7%BA%AF%E6%B1%89%E5%8C%96%E6%A8%A1%E6%9D%BF",target:"_blank",rel:"noopener noreferrer"}},[t._v("纯汉化模板（不推荐）"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://cz-git.qbb.sh/zh/config/#emoji-%E6%A8%A1%E6%9D%BF",target:"_blank",rel:"noopener noreferrer"}},[t._v("Emoji 模板"),s("OutboundLink")],1),t._v("、"),s("a",{attrs:{href:"https://cz-git.qbb.sh/zh/config/#json-%E6%A8%A1%E6%9D%BF",target:"_blank",rel:"noopener noreferrer"}},[t._v("JSON 模板"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .commitlintrc.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @type {import('cz-git').UserConfig} */")]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("rules")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// @see: https://commitlint.js.org/#/reference-rules")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("prompt")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("alias")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("fd")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docs: fix typos"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("messages")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Select the type of change that you\'re committing:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("scope")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Denote the SCOPE of this change (optional):"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("customScope")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Denote the SCOPE of this change:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("subject")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Write a SHORT, IMPERATIVE tense description of the change:\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("body")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Provide a LONGER description of the change (optional). Use \"|\" to break new line:\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("breaking")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'List any BREAKING CHANGES (optional). Use \"|\" to break new line:\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("footerPrefixesSelect")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Select the ISSUES type of changeList by this change (optional):"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("customFooterPrefix")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Input ISSUES prefix:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("footer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"List any ISSUES by this change. E.g.: #31, #34:\\n"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("generatingByAI")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Generating your AI commit subject..."')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("generatedSelectByAI")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Select suitable subject by AI generated:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("confirmCommit")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Are you sure you want to proceed with the commit above?"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("types")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"feat"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"feat:     A new feature"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emoji")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":sparkles:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fix"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fix:      A bug fix"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emoji")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":bug:"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docs"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docs:     Documentation only changes"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emoji")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":memo:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"style"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"style:    Changes that do not affect the meaning of the code"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emoji")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":lipstick:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"refactor"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"refactor: A code change that neither fixes a bug nor adds a feature"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emoji")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":recycle:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"perf"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"perf:     A code change that improves performance"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emoji")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":zap:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test:     Adding missing tests or correcting existing tests"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emoji")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":white_check_mark:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"build"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"build:    Changes that affect the build system or external dependencies"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emoji")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":package:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ci"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ci:       Changes to our CI configuration files and scripts"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emoji")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":ferris_wheel:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chore"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"chore:    Other changes that don\'t modify src or test files"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emoji")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":hammer:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"revert"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"revert:   Reverts a previous commit"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emoji")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('":rewind:"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("useEmoji")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emojiAlign")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"center"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("useAI")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("aiNumber")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("themeColorCode")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("scopes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("allowCustomScopes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("allowEmptyScopes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("customScopesAlign")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bottom"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("customScopesAlias")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"custom"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emptyScopesAlias")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"empty"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("upperCaseSubject")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("markBreakingChangeMode")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("allowBreakingChanges")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"feat"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fix"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("breaklineNumber")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("breaklineChar")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"|"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("skipQuestions")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("issuePrefixes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"closed"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"closed:   ISSUES has been processed"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("customIssuePrefixAlign")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"top"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emptyIssuePrefixAlias")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"skip"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("customIssuePrefixAlias")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"custom"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("allowCustomIssuePrefix")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("allowEmptyIssuePrefix")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("confirmColorize")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("maxHeaderLength")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("maxSubjectLength")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("minSubjectLength")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("scopeOverrides")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("defaultBody")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("defaultIssues")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("defaultScope")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("defaultSubject")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("li",[s("p",[t._v("可与 commitlint 结合起来，直接在 commitlint 支持的配置文件或 cz.config.js 、cz.config.cjs 文件修改，推荐与 commintlint 配置结合")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 示例\n// .commitlintrc.js 中使用 @commitlint/config-conventional（需先添加 @commitlint/config-conventional ）\nmodule.exports = {\n  extends: ['@commitlint/config-conventional']\n}\n\n// 自定义配置，只支持 feat、fix\nmodule.exports = {\n  prompt: {\n    types: [\n      { value: 'feat', name: 'feat:     A new feature', emoji: ':sparkles:' },\n      { value: 'fix', name: 'fix:      A bug fix', emoji: ':bug:' }\n    ]\n  }\n}\n")])])])])]),t._v(" "),s("p",[t._v("其他配置的详细说明可参考其说明。")]),t._v(" "),s("p",[s("strong",[t._v("整体来说，cg-git 是一个很好的 commitizen 适配器，联想功能和高度灵活的配置使其非常好用。")])]),t._v(" "),s("h4",{attrs:{id:"czg"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#czg"}},[t._v("#")]),t._v(" czg")]),t._v(" "),s("p",[t._v("czg = commitizen + cz-git，更轻量。")]),t._v(" "),s("p",[s("strong",[t._v("注意：czg 是 commitize 的替代品，不是适配器，czg 不依赖 commitize。")])]),t._v(" "),s("blockquote",[s("p",[t._v("cz-git 是 "),s("strong",[t._v("commitizen 的适配器")]),t._v("。而 czg 具有 cz-git 相同的行为和配置加载。如果你的团队中有人使用 Commitizen CLI，两者可以混用，毕竟两者都非常小并且无需下载其他依赖项。")]),t._v(" "),s("ul",[s("li",[t._v("如果你使用 "),s("code",[t._v("cz")]),t._v(" 或 "),s("code",[t._v("git cz")]),t._v(" 命令将会启动 "),s("code",[t._v("commitizen")]),t._v(" CLI + "),s("code",[t._v("cz-git")]),t._v(" 适配器")]),t._v(" "),s("li",[t._v("如果你使用 "),s("code",[t._v("czg")]),t._v(" 或 "),s("code",[t._v("git czg")]),t._v(" 命令只会启动 "),s("code",[t._v("czg")]),t._v(" CLI")])])]),t._v(" "),s("p",[t._v("相比于 cz-git 依赖 commitizen，czg 会更轻量。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//1. 全局安装，全局安装后直接可使用 czg命令\nnpm install -g czg\n\n// or 项目安装\nnpm install -D czg\n\n// 在 package.json 中添加启动脚本 运行命令进行尝试 npm czg\n{\n  "scripts": {\n    "czg": "czg"\n  }\n}\n\n// 规范配置部分与cg-git相同\n\n// 提交时使用 czg 或 npm czg 即可打开czg进行交互式提交\n')])])]),s("p",[s("strong",[t._v("RECOMMEND：")])]),t._v(" "),s("ol",[s("li",[s("strong",[t._v("cgz 更轻量，推荐直接使用 cgz")])]),t._v(" "),s("li",[t._v("如果自定配置较多的提交规范，建议工程集成 cgz；如果基本与默认配置相同，建议本地全局安装 cgz")])]),t._v(" "),s("h3",{attrs:{id:"基于czg的最佳工程实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#基于czg的最佳工程实践"}},[t._v("#")]),t._v(" 基于czg的最佳工程实践")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1. Add commitlint")]),t._v("\npnpm add "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v(" @commitlint"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("cli\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. Add husky")]),t._v("\npnpm dlx husky"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("init "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" pnpm install\npnpx husky add "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("husky"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("commit"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("msg "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'npx --no -- commitlint --edit \"$1\"'")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3. Add czg")]),t._v("\npnpm add "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("D")]),t._v(" czg\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// package.json配置czg脚本")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"scripts"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v('"cz"')]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"czg"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4. 工程增加 .commitlintrc.js 文件，为commitlint和czg配置文件，文件内容如下（采用 cz-git 中英文配置文件）")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// .commitlintrc.js")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** @type {import('cz-git').UserConfig} */")]),t._v("\nmodule"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("rules")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'body-leading-blank'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'always'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'footer-leading-blank'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'always'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'header-max-length'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'always'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("108")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'subject-empty'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'type-empty'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'never'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'subject-case'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token string-property property"}},[t._v("'type-enum'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'always'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'feat'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fix'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'docs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'style'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'refactor'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'perf'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'build'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ci'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'revert'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chore'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("prompt")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("alias")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("fd")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'docs: fix typos'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("messages")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'选择你要提交的类型 :'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("scope")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'选择一个提交范围（可选）:'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("customScope")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'请输入自定义的提交范围 :'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("subject")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'填写简短精炼的变更描述 :\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("body")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'填写更加详细的变更描述（可选）。使用 \"|\" 换行 :\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("breaking")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'列举非兼容性重大的变更（可选）。使用 \"|\" 换行 :\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("footerPrefixesSelect")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'选择关联issue前缀（可选）:'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("customFooterPrefix")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'输入自定义issue前缀 :'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("footer")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'列举关联issue (可选) 例如: #31, #I3244 :\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("confirmCommit")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'是否提交或修改commit ?'")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("types")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'feat'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'feat:     新增功能 | A new feature'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fix'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fix:      修复缺陷 | A bug fix'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'docs'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'docs:     文档更新 | Documentation only changes'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'style'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'style:    代码格式 | Changes that do not affect the meaning of the code'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'refactor'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'refactor: 代码重构 | A code change that neither fixes a bug nor adds a feature'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'perf'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'perf:     性能提升 | A code change that improves performance'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test:     测试相关 | Adding missing tests or correcting existing tests'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'build'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'build:    构建相关 | Changes that affect the build system or external dependencies'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ci'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ci:       持续集成 | Changes to our CI configuration files and scripts'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'revert'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'revert:   回退代码 | Revert to a commit'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chore'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'chore:    其他修改 | Other changes that do not modify src or test files'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("useEmoji")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emojiAlign")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'center'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("useAI")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("aiNumber")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("themeColorCode")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("scopes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("allowCustomScopes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("allowEmptyScopes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("customScopesAlign")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bottom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("customScopesAlias")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'custom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emptyScopesAlias")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'empty'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("upperCaseSubject")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("markBreakingChangeMode")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("allowBreakingChanges")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'feat'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fix'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("breaklineNumber")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("breaklineChar")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("skipQuestions")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("issuePrefixes")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果使用 gitee 作为开发管理")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'link'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'link:     链接 ISSUES 进行中'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'closed'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'closed:   标记 ISSUES 已完成'")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("customIssuePrefixAlign")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'top'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("emptyIssuePrefixAlias")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'skip'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("customIssuePrefixAlias")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'custom'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("allowCustomIssuePrefix")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("allowEmptyIssuePrefix")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("confirmColorize")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("maxHeaderLength")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("maxSubjectLength")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("Infinity")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("minSubjectLength")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("scopeOverrides")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("defaultBody")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("defaultIssues")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("defaultScope")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("defaultSubject")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("''")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 5.提交时执行 pnpm cz即可")]),t._v("\ngit add "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\npnpm cz\n")])])]),s("p",[t._v("资料：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://cz-git.qbb.sh/zh/config/#%E4%B8%AD%E8%8B%B1%E6%96%87%E5%AF%B9%E7%85%A7%E6%A8%A1%E6%9D%BF",target:"_blank",rel:"noopener noreferrer"}},[t._v("cz-git 中英文对照模板"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://cz-git.qbb.sh/zh/cli/",target:"_blank",rel:"noopener noreferrer"}},[t._v("czg"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"changelog"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#changelog"}},[t._v("#")]),t._v(" CHANGELOG")]),t._v(" "),s("p",[t._v("根据规范提交信息自动生成版本信息，相关工具：")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://github.com/conventional-changelog/standard-version",target:"_blank",rel:"noopener noreferrer"}},[t._v("Standard Version"),s("OutboundLink")],1),t._v("，使用较多，但是作者本身已经不维护了，作者推荐使用 release-please")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("conventional-changelog-cli"),s("OutboundLink")],1),t._v("，Generate a changelog from git metadata")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/googleapis/release-please",target:"_blank",rel:"noopener noreferrer"}},[t._v("release-please"),s("OutboundLink")],1),t._v("，与 Github 结合的比较好")])]),t._v(" "),s("p",[s("strong",[t._v("根据 npmtrends 数据，使用量 standard-version > conventional-changelog-cli > release-please")])]),t._v(" "),s("p",[t._v("以 standarr-version 为例：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('// 1. 全局或项目安装 standard-version\nnpm install -g standard-version\nor\npnpm add -D standard-version\n\n// 2. 项目安装则需要配置packagejson\n{\n  "scripts": {\n    "release": "standard-version"\n  }\n}\n\n// 3. 则可使用 pnpm release 命令，会在项目中自动生成 CHANGELOG.md 文件\n')])])]),s("p",[t._v("CHANGELOG.md 文件示例：")]),t._v(" "),s("p",[s("img",{attrs:{src:a(433),alt:""}})]),t._v(" "),s("p",[t._v("即"),s("code",[t._v("pnpm release")]),t._v(" 命令，会完成四件事：")]),t._v(" "),s("ol",[s("li",[t._v("提取 feat、feat!、fix、BREAKCHANGE 提交信息生成版本记录和版本变更，生成 CHANGELOG.md 文件")]),t._v(" "),s("li",[t._v("修改 package.json 文件版本，并")]),t._v(" "),s("li",[t._v("自动生成一个"),s("code",[t._v("chore(release): 0.1.0")]),t._v("的提交（提交内容包含 CHANGE.md 文件和 package.josn 文件）")]),t._v(" "),s("li",[t._v("添加 git 对应版本 TAG")])]),t._v(" "),s("h2",{attrs:{id:"附录"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#附录"}},[t._v("#")]),t._v(" 附录")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"https://www.conventionalcommits.org/zh-hans/v1.0.0/",target:"_blank",rel:"noopener noreferrer"}},[t._v("约定式提交规范 Conventional Commits"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://link.juejin.cn/?target=https%3A%2F%2Fgithub.com%2Fangular%2Fangular.js%2Fblob%2Fmaster%2FDEVELOPERS.md%23-git-commit-guidelines",target:"_blank",rel:"noopener noreferrer"}},[t._v("Angular 团队规范"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/vuejs/core/blob/main/.github/commit-convention.md",target:"_blank",rel:"noopener noreferrer"}},[t._v("Vue Git Commit Message Convention"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/conventional-changelog/commitlint",target:"_blank",rel:"noopener noreferrer"}},[t._v("commitlint"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/typicode/husky",target:"_blank",rel:"noopener noreferrer"}},[t._v("husky"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/toplenboren/simple-git-hooks",target:"_blank",rel:"noopener noreferrer"}},[t._v("simple-git-hooks"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/commitizen/cz-cli",target:"_blank",rel:"noopener noreferrer"}},[t._v("Commitizen"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://cz-git.qbb.sh/zh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("cg-git"),s("OutboundLink")],1)]),t._v(" "),s("li",[s("a",{attrs:{href:"https://github.com/conventional-changelog/standard-version",target:"_blank",rel:"noopener noreferrer"}},[t._v("Standard Version"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);